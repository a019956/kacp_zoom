{"version":3,"sources":["components/NavbarItem.js","components/Navbar.js","components/InputField.js","components/SubmitButton.js","stores/UserStore.js","pages/LogIn.js","pages/LandingPage.js","components/TimeCard.js","components/SelectMenu.js","components/TimeChecker.js","components/AppointmentCards.js","components/AppointmentList.js","components/EmailShare.js","pages/ZoomPicker.js","pages/RoomPicker.js","App.js","pages/frontendtest.js","serviceWorker.js","index.js","components/log-in-image.png"],"names":["NavbarItem","this","props","name","page","onPage","claasName","onClick","Component","Navbar","username","today","navItems","map","r","className","Inputfield","label","type","placeholder","value","size","onChange","autoComplete","SubmitButton","text","extendObservable","loading","isLoggedIn","LogIn","state","password","buttonDisabled","handleChange","bind","doLogIn","handleSubmit","e","setState","target","preventDefault","alert","fetch","method","headers","body","JSON","stringify","res","json","result","success","UserStore","resetForm","msg","console","log","src","log_in_image","onSubmit","LandingPage","TimeCard","time","date","availability","SelectMenu","endLabel","options","index","key","AppointmentCards","purpose","startTime","endTime","zoom_username","join_url","start_url","meeting_id","onStart","onDelete","onEmailShare","onKakaoTalk","AppointmentList","appointmentCards","id","ZoomPicker","format","Date","appointments","reucurringMeetings","recurrence","recurrenceOptions","recurrenceOption","recurrenceTypes","recurrenceType","recurrenceWeeks","recurrenceWeek","recurrenceDays","recurrenceDay","recurrenceIntervals","recurrenceInterval","recurrenceTimes","recurrenceTime","share_join_url","share_start_time","share_end_time","share_date","share_purpose","handleDateChange","handleTimeChange","doAppointment","deleteAppointment","sendEmail","timeToInt","timesToDuration","onCancel","getAppointment","timeString","split","forEach","element","parseInt","startTimeInt","endTimeInt","durationArray","push","toLocaleDateString","toLocaleTimeString","hour","minute","second","duration","length","window","open","emailjs","sendForm","then","error","startMeeting","selected","onSelect","handleClick","placeholderText","dateFormat","minDate","maxDate","addDays","showTimeSelect","showTimeSelectOnly","timeFormat","timeIntervals","for","RoomPicker","App","currentPage","changePage","testLogIn","observer","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message","module","exports"],"mappings":"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","file":"static/js/main.c60598d2.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport '../styles/NavbarItem.css';\n\nclass NavbarItem extends Component {\n\trender() {\n\t\tconst {name, page, onPage} = this.props;\n\t\treturn (\n            <div claasName='navbar-item' onClick={() => onPage(page)}>\n                {name}\n            </div>\n\t\t);\n\t}\n}\nexport default NavbarItem;","import React, { Component } from 'react';\nimport NavbarItem from './NavbarItem'\nimport '../styles/Navbar.css';\n\nclass Navbar extends Component {\n\trender() {\n\t\tconst {username, today, onPage} = this.props;\n\t\tconst navItems = this.props.navItems.map((r) => (\n\t\t\t<NavbarItem {...r} onPage={onPage} />\n\t\t));\n\t\t\n\t\treturn (\n\t\t\t<header>\n\t\t\t\t<h1>Zoom Appointment Organizer</h1>\n\t\t\t\t<nav>\n\t\t\t\t{/* <ul className = 'navItems'>\n\t\t\t\t\t{navItems}\n\t\t\t\t</ul> */}\n\t\t\t\t</nav>\n\t\t\t\t<button className = \"settings-button\">\n\n\t\t\t\t</button>\n\t\t\t</header>\n\t\t);\n\t}\n}\nexport default Navbar;","import React, { Component } from 'react';\nimport '../styles/InputField.css'\n\nclass Inputfield extends Component {\n    render() {\n        return (\n                <div className='container' >\n                    <label>\n                        {this.props.label}\n                    </label>\n                    <input\n                    className='login-input-field'\n                    type={this.props.type}\n                    placeholder={this.props.placeholder}\n             \t\tname={this.props.name}\n            \t\tvalue={this.props.value}\n            \t\tsize={15}\n\t\t\t\t\tonChange={this.props.onChange} \n                    autoComplete=\"off\"\n                    />\n                </div>\n        );\n    }\n}\nexport default Inputfield","import React, { Component } from 'react';\nimport '../styles/SubmitButton.css'\n\nclass SubmitButton extends Component {\n    render() {\n        return (\n            <button \n            type = 'submit'\n            className='log-in-button'\n            >\n                {this.props.text}\n            </button>\n        )};\n}\nexport default SubmitButton","import {extendObservable} from 'mobx';\n\nclass UserStore{\n    constructor() {\n        extendObservable(this, {\n            loading: true,\n            isLoggedIn: true,\n            username: ''\n        })\n    }\n}\n\nexport default new UserStore();","import React, { Component } from 'react';\nimport '../styles/LogIn.css'\nimport InputField from '../components/InputField'\nimport SubmitButton from '../components/SubmitButton'\nimport UserStore from '../stores/UserStore';\nimport log_in_image from '../components/log-in-image.png'\n\n\nclass LogIn extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            password: '',\n            //to prevent logging in twice\n            buttonDisabled: false\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.doLogIn = this.doLogIn.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    };\n\n    //  At change of input, change state.\n    handleChange(e) {\n\t\tthis.setState({[e.target.name]: e.target.value});\n    }\n    \n\n    //  FOR LOG-IN\n    //  If there is an error with log-in, reset password to emtpy.\n    resetForm() {\n        this.setState({\n            password: ''\n        })\n    }\n\n    //  Check if username or password is empty.\n    handleSubmit(e) {\n        e.preventDefault();\n        if (this.state.username == '') {\n            alert('username is empty.')\n            return;\n        }\n        if (this.state.password == '') {\n            alert('password is empty.')\n            return;\n        }\n\n        this.setState({\n            buttonDisabled: true\n        })\n\n        //  If they are not empty, send log-in request to router.\n        this.doLogIn()\n    }\n\n    //  Send log-in request to router.\n    async doLogIn() {\n        \n        try { \n\n            let res = await fetch('/login', {\n                method: 'post',\n                headers: {\n                    'Accept': 'application/JSON',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    username: this.state.username,\n                    password: this.state.password\n                })\n            });\n\n            //  If there is a matching username and password in the database, let user log-in to the application.\n            let result = await res.json();\n            if (result && result.success) {\n                UserStore.username = result.username;\n                UserStore.isLoggedIn = true;\n            }\n\n            //  If there is a mismatch, aler user with error message and reset password input.\n            else if (result && result.success === false) {\n                this.resetForm();\n                alert(result.msg);\n            }\n        }\n            //Handle errors\n            catch(e) {\n                console.log(e);\n                this.resetForm();\n        }\n    }\n\n\n    render() {\n        return (\n            <div className=\"container\">\n\n            <img src={log_in_image}/>\n                <form \n                className=\"input-fields\"\n                onSubmit={this.handleSubmit}>\n\n                    <InputField\n                    label='Username:'\n                    type='username'\n                    placeholder='Username'\n                    name='username'\n                    value={this.state.username}\n                    onChange = {this.handleChange}\n                    />\n\n                    <InputField\n                    label='Password:'\n                    type='password'\n                    placeholder='Password'\n                    name='password'\n                    value={this.state.password}\n                    onChange = {this.handleChange}\n                    />\n\n                    <SubmitButton\n                    text = {'Log In'}\n                    />\n\n                </form>\n\n                <div className=\"account-request\">\n\n                </div>\n\n            </div>\n        )};\n}\nexport default LogIn","import React, { Component } from 'react';\n\n//  FOR FUTURE USE\n\nclass LandingPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            password: '',\n        }\n    };\n\n    render() {\n        return (\n            <div className=\"container\">\n                THIS IS LANDING PAGE\n            </div>\n        )};\n    }\nexport default LandingPage","import React, {Component} from 'react'\n\nclass TimeCard extends Component{\n    render() {\n        const {date, time, availability} = this.props;\n\n        return(\n            <div className=\"time-card\"\n            time={time}\n            availability={availability}\n            >\n                <div>\n                    {time}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default TimeCard","import React, { Component } from 'react';\nimport '../styles/SelectMenu.css'\n\n\nclass SelectMenu extends Component {\n    render() {\n        const {name, label, onChange, value, endLabel} = this.props;\n        const options = this.props.options.map((r, index) => (\n            <option key={r.value} {...r}>{r.name}</option>\n        ));\n        return (\n            <div className='select-container'>\n                <label className='SelectLabel'>\n                    {label}\n                </label>\n                <select \n                    className='select-options'\n                    name={name}\n                    onChange={onChange}\n                    value={value}\n                >\n                {options}\n                </select>\n                <label className='SelectLabel'>\n                    {endLabel}\n                </label>\n            </div>\n        )\n    }\n}\nexport default SelectMenu","import React, { Component } from 'react';\nimport TimeCard from './TimeCard';\n\nclass TimeDisplay extends Component{\n    constructor(props) {\n        super(props)\n    }\n    render () {\n        const {date, onClick} = this.props;\n        const timeCards = this.props.timeCards.map((r) => (\n            <TimeCard {...r} onClick={onClick}/>\n        ))\n        return (\n            <div className=\"email-share\">\n                <text> Availability on {date} </text>\n                <div className=\"time-card-container\">\n                    {timeCards}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default TimeDisplay","import React, {Component} from 'react';\nimport '../styles/AppointmentCards.css'\n\nclass AppointmentCards extends Component {\n\n    render() {\n        const {date,  purpose, startTime, endTime, zoom_username, join_url, \n            start_url, meeting_id, onStart, onDelete, onEmailShare, onKakaoTalk} = this.props;\n        return (\n            <div className=\"appointment-card\">\n                <div className='meeting-info'>\n                    <text className=\"purpose\">{purpose} </text>\n                    <text className=\"date\">{date}</text>\n                    <text className=\"duration\">{startTime} - {endTime}</text>\n                </div>\n                <div className=\"zoom-info\">\n                    <text className=\"zoom-username\">{zoom_username}</text>\n                    <text>Invite link:</text>\n                    <text className=\"join-url\">{join_url}</text>\n                </div>\n                <div className=\"button-container\">\n                    <button\n                    className=\"start-button\"\n                    onClick = {() => onStart(start_url)}\n                    >\n                        Start\n                    </button>\n                    <button\n                    className=\"email-button\"\n                    onClick = {() => onEmailShare(join_url, startTime, endTime, date, purpose)}\n                    >\n                        Share\n                    </button>\n                    <button\n                    className=\"delete-button\"\n                    onClick = {() => onDelete(meeting_id)}\n                    >\n                        Delete\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\nexport default AppointmentCards;","import React, {Component} from 'react';\nimport AppointmentCards from './AppointmentCards';\nimport '../styles/AppointmentList.css'\n\nclass AppointmentList extends Component {\n\n    render() {\n        const {onStart, onDelete, onEmailShare} = this.props;\n        const appointmentCards = this.props.appointmentCards.map((r, index) => (\n            <AppointmentCards key = {r.id} {...r} onStart={onStart} onDelete={onDelete} onEmailShare={onEmailShare}/>\n        ));\n\n        return (\n                <div className = 'appointment-list'>\n                    {appointmentCards}\n                </div>\n        )\n    }\n}\n\nexport default AppointmentList;","import React, { Component } from 'react';\nimport InputField from './InputField'\nimport '../styles/EmailShare.css';\n\nclass EmailShare extends Component {\n    constructor(props) {\n        super(props);\n    }\n    \n    render () {\n        const {onCancel, from_name, join_url, start_time, end_time, date, purpose} = this.props;\n\n        return (\n            <div className=\"email-share\">\n                <button onCancel={onCancel}>X</button>\n                <div className=\"share-info-container\">\n                    <h3 className=\"share-meeting\">\n                        회의 공유/Share Meeting\n                    </h3>\n                    <text className=\"share-meeting-info\">Invitation for Zoom Meeting for {purpose} {'\\n'} on {date} from {start_time} - {end_time} {'\\n'}Join with: {join_url}</text>\n                </div>\n                <form className=\"contact-form\" onSubmit={this.props.sendEmail}>\n                    <InputField type=\"hidden\" name=\"from_name\" value={from_name}/>\n                    <InputField type=\"hidden\" name=\"join_url\" value={join_url}/>\n                    <InputField type=\"hidden\" name=\"start_time\" value={start_time}/>\n                    <InputField type=\"hidden\" name=\"end_time\" value={end_time}/>\n                    <InputField type=\"hidden\" name=\"date\" value={date}/>\n                    <InputField type=\"hidden\" name=\"purpose\" value={purpose}/>\n                    <label>발신자/From</label>\n                    <InputField type=\"text\" name=\"from_name\"/>\n                    <label>수신자/Recipient</label>\n                    <InputField type=\"text\" name=\"recipient\"/>\n                    <label>더할 내용/Additional Message</label>\n                    <textarea name=\"message\" />\n                    <button type=\"submit\" value=\"Send\">Share</button>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default EmailShare\n","import React, { Component } from 'react';\r\nimport TimeChecker from '../components/TimeChecker'\r\nimport SelectMenu from '../components/SelectMenu'\r\nimport InputField from '../components/InputField'\r\nimport SubmitButton from '../components/SubmitButton'\r\nimport AppointmentList from '../components/AppointmentList'\r\nimport EmailShare from '../components/EmailShare'\r\nimport DatePicker from 'react-datepicker';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport emailjs from 'emailjs-com';\r\nimport { addDays , format } from 'date-fns';\r\nimport UserStore from '../stores/UserStore'\r\nimport '../styles/ZoomPicker.css';\r\nimport { Paper } from '@material-ui/core';\r\n\r\nclass ZoomPicker extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            today: format(new Date(), 'yyyy-MM-dd'),\r\n            username: '',\r\n            date: '',\r\n            startTime: '',\r\n            endTime: '',\r\n            purpose: '',\r\n            buttonDisabled: false,\r\n            appointments: [],\r\n            reucurringMeetings: [],\r\n            //Select menus for recurring meetings\r\n            recurrence: false,\r\n            recurrenceOptions: [\r\n                {name: 'One-time', value: '2'},\r\n                {name: 'Repeating', value: '8'}\r\n            ],\r\n            recurrenceOption: '',\r\n            recurrenceTypes: [\r\n                {name: 'Weekly', value: '2',},\r\n                {name: 'Monthly', value: '3',}\r\n            ],\r\n            recurrenceType: 2,\r\n            recurrenceWeeks: [\r\n                {name: 'First', value: '1'},\r\n                {name: 'Second', value: '2'},\r\n                {name: 'Third', value: '3'},\r\n                {name: 'Fourth', value: '4'},\r\n                {name: 'Last', value: '-1'},\r\n            ],\r\n            recurrenceWeek: 1,\r\n            recurrenceDays: [\r\n                {name: 'Sunday', value: '7',},\r\n                {name: 'Monday', value: '1',},\r\n                {name: 'Tuesday',value: '2',},\r\n                {name: 'Wednesday', value: '3',},\r\n                {name: 'Thursday', value: '4',},\r\n                {name: 'Friday', value: '5',},\r\n                {name: 'Saturday', value: '6',},\r\n            ],\r\n            recurrenceDay: 1,\r\n            recurrenceIntervals: [\r\n                {name: '1', value: '1',},\r\n                {name: '2', value: '2',},\r\n                {name: '3', value: '3',},\r\n            ],\r\n            recurrenceInterval: 1,\r\n            recurrenceTimes: [\r\n                {name: '1', value: '1',},\r\n                {name: '2', value: '2',},\r\n                {name: '3', value: '3',},\r\n                {name: '4', value: '4',},\r\n                {name: '5', value: '5',},\r\n                {name: '6', value: '6',},\r\n                {name: '7', value: '7',},\r\n                {name: '8', value: '8',},\r\n                {name: '9', value: '9',},\r\n                {name: '10', value: '10',},\r\n                {name: '11', value: '11',},\r\n                {name: '12', value: '12',},\r\n                {name: '13', value: '13',},\r\n                {name: '14', value: '14',},\r\n                {name: '15', value: '15',},\r\n                {name: '16', value: '16',}\r\n            ],\r\n            recurrenceTime: 2,\r\n\r\n            //state for email sharing\r\n            share_join_url: '',\r\n            share_start_time: '',\r\n            share_end_time: '',\r\n            share_date: '',\r\n            share_purpose: '', \r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleDateChange = this.handleDateChange.bind(this);\r\n        this.handleTimeChange = this.handleTimeChange.bind(this);\r\n        this.doAppointment = this.doAppointment.bind(this);\r\n        this.deleteAppointment = this.deleteAppointment.bind(this);\r\n        this.onEmailShare = this.onEmailShare.bind(this);\r\n        this.sendEmail = this.sendEmail.bind(this);\r\n        this.timeToInt = this.timeToInt.bind(this);\r\n        this.timesToDuration = this.timesToDuration.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.onCancel = this.onCancel.bind(this);\r\n    };\r\n\r\n    //  Upon loading of the page, load all appointments \r\n    componentDidMount() {\r\n        const username = UserStore.username\r\n        this.setState({username});\r\n        this.getAppointment();\r\n    }\r\n\r\n    //  Updates states upon change of values.\r\n    handleChange(e) {\r\n\t\tthis.setState({[e.target.name]: e.target.value});\r\n    }\r\n    handleDateChange(date, name) {\r\n        this.setState({[name]: date});\r\n    }\r\n    handleTimeChange(value, name) {\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n\r\n    //  Function to change time string to 6 digit integer value for calculations and JSON formatting\r\n    timeToInt(time) {\r\n        let timeString = ''\r\n        time.split(\":\").forEach((element) => {\r\n            timeString += element;\r\n        });\r\n        var timeInt = parseInt(timeString)\r\n        return timeInt;\r\n    }\r\n\r\n    //  Changes starting time and ending time to duration array.\r\n    timesToDuration(startTimeInt, endTimeInt) {\r\n        var durationArray = [];\r\n        while(startTimeInt <= endTimeInt) {\r\n            durationArray.push(startTimeInt);\r\n            if (startTimeInt%10000 === 0) {\r\n                startTimeInt += 3000\r\n            }\r\n            else {\r\n                startTimeInt += 7000\r\n            }\r\n        }\r\n        return durationArray;\r\n    }\r\n    \r\n    //  Submitting meetings to be checked for validity.\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        //  If some field is emtpy, return error.\r\n        if (\r\n            this.state.date === '' || \r\n            this.state.startTime === '' || \r\n            this.state.endTime === '' || \r\n            this.state.purpose === ''){\r\n            alert('Please fill out all fields.')\r\n            return;\r\n        }\r\n        this.doAppointment()\r\n    }\r\n\r\n    //  Create appointment based on infromation given by the user\r\n    async doAppointment() {\r\n        const today = format(new Date(), 'yyyy-MM-dd')\r\n        const username = this.state.username;\r\n        const date = this.state.date.toLocaleDateString(\"fr-CA\");\r\n        const startTime = this.state.startTime.toLocaleTimeString(\"en-GB\", {hour: '2-digit', minute: '2-digit', second: '2-digit'});\r\n        const endTime = this.state.endTime.toLocaleTimeString(\"en-GB\", {hour: '2-digit', minute: '2-digit', second: '2-digit'});\r\n        const purpose = this.state.purpose;\r\n        const recurrenceType = this.state.recurrenceType;\r\n        const recurrenceOption = this.state.recurrenceOption;\r\n        const recurrenceInterval = this.state.recurrenceInterval;\r\n        const recurrenceWeek = this.state.recurrenceWeek;\r\n        const recurrenceDay = this.state.recurrenceDay;\r\n        const recurrenceTime = this.state.recurrenceTime;\r\n\r\n        var startTimeInt = this.timeToInt(startTime);\r\n        var endTimeInt = this.timeToInt(endTime);\r\n\r\n        //  If the date given by the user is before today or startime is after endtime, return error.\r\n        if (this.state.date < today || startTimeInt > endTimeInt){\r\n            alert('Invalid time.')\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            buttonDisabled: true\r\n        })\r\n\r\n        //  Make duration into duration array with 30 minute increments to be saved in the database.\r\n        var durationArray = this.timesToDuration(startTimeInt, endTimeInt)\r\n        //  Duration in minutes\r\n        var duration = (durationArray.length - 1) * 30\r\n        try { \r\n            let res = await fetch('/doAppointment', {\r\n                method: 'post',\r\n                headers: {\r\n                    'Accept': 'application/JSON',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                //  Send JSON to router to be inserted into database.\r\n                body: JSON.stringify({\r\n                    username: username,\r\n                    date: date,\r\n                    duration: duration,\r\n                    durationArray: durationArray,\r\n                    purpose: purpose,\r\n                    startTime: startTime,\r\n                    endTime: endTime,\r\n                    recurrenceType: recurrenceType,\r\n                    recurrenceOption: recurrenceOption,\r\n                    recurrenceInterval: recurrenceInterval,\r\n                    recurrenceWeek: recurrenceWeek,\r\n                    recurrenceDay: recurrenceDay,\r\n                    recurrenceTime: recurrenceTime,\r\n                    \r\n                })\r\n            });\r\n            //  Meeting is successfully made.\r\n            let result = await res.json();\r\n            if (result && result.success) {\r\n                alert(result.msg);\r\n            }\r\n            //  If time collides with other meetings, return fail.\r\n            else if (result && result.success === false) {\r\n                alert(result.msg);\r\n            }\r\n        }\r\n        //  Handle errors\r\n        catch(e) {\r\n            console.log(e);\r\n        }\r\n        this.getAppointment()\r\n    }\r\n\r\n    //  Loads appointments for front-end display that are under the current username\r\n    async getAppointment() {\r\n        const username = UserStore.username;\r\n        const today = format(new Date(), 'yyyy-MM-dd')\r\n\r\n        try{\r\n            let res = await fetch ('/getAppointment', {\r\n                method: 'post',\r\n                headers: {\r\n                    'Accept': 'application/JSON',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    username: username,\r\n                    today: today,\r\n                })\r\n            });\r\n\r\n            let result = await res.json();\r\n            //  Get appointments made by the user from the database, and set react state with retrieved data.\r\n            const appointments = result.appointments;\r\n            this.setState({appointments})\r\n        }\r\n        //  Handle errors\r\n        catch(e) {\r\n            UserStore.loading = false;\r\n            UserStore.isLoggedIn = false;\r\n        }\r\n\r\n    };\r\n\r\n    //  When start button is pressed, open Zoom meeting start url retrieved from Zoom API.\r\n    startMeeting(start_url) {\r\n        window.open(start_url)\r\n    }\r\n\r\n    //  Delete meeting from the database and make DELETE request to Zoom API.\r\n    async deleteAppointment(meeting_id) {\r\n        const id = meeting_id\r\n        \r\n        //  Send meeting ID retrieved from Zoom API to router.\r\n        try { \r\n            let res = await fetch('/deleteAppointment', {\r\n                method: 'post',\r\n                headers: {\r\n                    'Accept': 'application/JSON',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    id: id\r\n                })\r\n            });\r\n            \r\n            let result = await res.json();\r\n            //  If successful, alert with success message.\r\n            if (result && result.success) {\r\n                alert(result.msg);\r\n            }\r\n            //  If there is an error, alert with error message.\r\n            else if (result && result.success === false) {\r\n                alert(result.msg);\r\n            }\r\n        }\r\n        //  Handle errors.\r\n        catch(e) {\r\n            console.log(e);\r\n        }\r\n        this.getAppointment()\r\n    }\r\n\r\n\r\n\r\n    //  SENDING EMAILS\r\n    //  When share button is pressed, set shared meeting information as state to be displayed on front end & to be sent as e-mail.\r\n    onEmailShare(join_url, startTime, endTime, date, purpose){\r\n        const share_join_url = join_url;\r\n        const share_start_time = startTime;\r\n        const share_end_time = endTime;\r\n        const share_date = date;\r\n        const share_purpose = purpose;\r\n        this.setState({share_join_url, share_start_time, share_end_time, share_date, share_purpose})\r\n    }\r\n\r\n    //  When cancel button is pressed, clear shared meeting information from state. \r\n    onCancel(){\r\n        this.setState({share_join_url: '', share_start_time: '', share_end_time: '', share_date: '', share_purpose: ''})\r\n    }\r\n\r\n    //  On submission,\r\n    sendEmail(e) {\r\n        e.preventDefault();\r\n\r\n        emailjs.sendForm('service_b2o90jd', 'template_95z7xck', e.target, 'user_vZliYk1PdzThlzI9zIDpR')\r\n            .then((result) => {\r\n                console.log(result.text);\r\n                alert('email was sent.')\r\n                \r\n            }, (error) => {\r\n                console.log(error.text);\r\n                alert('Error has occurred, please try again. Error:' + error)\r\n            });\r\n    }\r\n\r\n    //RENDER METHOD\r\n    render() {\r\n        const { today, date, startTime, endTime, purpose, recurrenceTypes, recurrenceType, \r\n                recurrenceOptions, recurrenceOption, recurrenceWeeks, recurrenceWeek,  recurrenceDays, recurrenceDay, recurrenceIntervals, recurrenceInterval,\r\n                recurrenceTimes, recurrenceTime, share_join_url, share_start_time, share_end_time,\r\n                share_date, share_purpose} = this.state;\r\n        return (\r\n            <div>\r\n                <div className = \"app_container\">\r\n                    <div className = \"left_container\" >\r\n                        <div className = \"appointment_display\">\r\n                            <div className=\"explanation\">\r\n                                <div className = \"block_title\">Appointments</div> <div className = \"block_date\">{today}</div>\r\n                            </div>\r\n                            <div className = \"appointment_list_container\">\r\n                                <AppointmentList\r\n                                    appointmentCards = {this.state.appointments}\r\n                                    onStart={this.startMeeting}\r\n                                    onDelete={this.deleteAppointment}\r\n                                    onEmailShare={this.onEmailShare}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"right_container\">\r\n                        <text className = 'right-title'>Create Appointment</text>\r\n                        <form className=\"appointment_form\"\r\n                        onSubmit={this.handleSubmit}>\r\n\r\n                            {/* <DateChecker/> */}\r\n                            <div className = \"time-picker\">\r\n                                <label>Starting Date</label>\r\n                                <DatePicker\r\n                                    className=\"start-date-picker\"\r\n                                    name=\"date\"\r\n                                    selected={date}\r\n                                    onChange={(date) => this.handleDateChange(date, \"date\")}\r\n                                    onSelect={this.handleClick}\r\n                                    placeholderText=\"Starting Date\"\r\n                                    dateFormat=\"yyyy-MM-dd\"\r\n                                    minDate= {new Date()}\r\n                                    maxDate={addDays(new Date(), 8)}\r\n                                    autoComplete=\"off\"\r\n                                />\r\n\r\n                                <label>Starting Time</label>\r\n                                <DatePicker\r\n                                    label='Start Time'\r\n                                    className=\"start-time-picker\"\r\n                                    name=\"startTime\"\r\n                                    selected={startTime}\r\n                                    onChange={(startTime) => this.handleDateChange(startTime, \"startTime\")}\r\n                                    onSelect={this.handleClick}\r\n                                    placeholderText=\"Starting Time\"\r\n                                    showTimeSelect\r\n                                    showTimeSelectOnly\r\n                                    timeFormat=\"HH:mm\"\r\n                                    timeIntervals={30}\r\n                                    dateFormat=\"h:mm aa\"\r\n                                    autoComplete=\"off\"\r\n                                />\r\n\r\n                                <label>Ending Time</label>\r\n                                <DatePicker\r\n                                    className=\"end-time-picker\"\r\n                                    name=\"endTime\"\r\n                                    selected={endTime}\r\n                                    onChange={(endTime) => this.handleDateChange(endTime, \"endTime\")}\r\n                                    onSelect={this.handleClick}\r\n                                    placeholderText=\"Ending Time\"\r\n                                    showTimeSelect\r\n                                    showTimeSelectOnly\r\n                                    timeFormat=\"HH:mm\"\r\n                                    timeIntervals={30}\r\n                                    dateFormat=\"h:mm aa\"\r\n                                    autoComplete=\"off\"\r\n                                />\r\n                                <label>Purpose</label>\r\n                                <input\r\n                                    label=\"Purpose\"\r\n                                    className=\"purpose-picker\"\r\n                                    type=\"text\"\r\n                                    name=\"purpose\"\r\n                                    placeholder=\"Purpose\"\r\n                                    value = {purpose}\r\n                                    onChange={this.handleChange}\r\n                                    autoComplete=\"off\"\r\n                                />\r\n                            </div>\r\n                            <div className='recurrence-options'>\r\n                                <li className='tab-container' value={recurrenceOption} onChange={this.handleChange}>\r\n                                    <ul>\r\n                                        <input name=\"recurrenceOption\" type=\"radio\" id=\"tab01\" value='2'/>\r\n                                        <label for=\"tab01\">One-time</label>\r\n                                    </ul>\r\n                                    <ul>\r\n                                        <input name=\"recurrenceOption\" type=\"radio\" id=\"tab02\" value='8'/>\r\n                                        <label for=\"tab02\">Repeating</label>\r\n                                    </ul>\r\n                                </li>\r\n                                    {(recurrenceOption==8) && \r\n                                    <div className='recurrence-menu'>\r\n                                        <SelectMenu\r\n                                            label=\"반복 / Recurrence\"\r\n                                            options={recurrenceTypes}\r\n                                            onChange={this.handleChange}\r\n                                            name='recurrenceType'\r\n                                            value={recurrenceType}\r\n                                        />\r\n\r\n\r\n                                        <SelectMenu\r\n                                            label={(recurrenceType==2)?'간격 (주) / Interval (Weeks)':'간격 (달) / Interval (Months)'}\r\n                                            options={recurrenceIntervals}\r\n                                            onChange={this.handleChange}\r\n                                            name='recurrenceInterval'\r\n                                            value={recurrenceInterval}\r\n                                        />\r\n                                        {(recurrenceType==3) && <SelectMenu\r\n                                            label='매 달 몇째주 / Week of the month'\r\n                                            options={recurrenceWeeks}\r\n                                            onChange={this.handleChange}\r\n                                            name='recurrenceWeek'\r\n                                            value={recurrenceWeek}\r\n                                        />}\r\n\r\n                                        <SelectMenu\r\n                                            label='요일 / Day of the Week'\r\n                                            options={recurrenceDays}\r\n                                            onChange={this.handleChange}\r\n                                            name='recurrenceDay'\r\n                                            value={recurrenceDay}\r\n                                        />\r\n\r\n                                        <SelectMenu\r\n                                            label='모임 횟수 / Recurrence amount'\r\n                                            options={recurrenceTimes}\r\n                                            onChange={this.handleChange}\r\n                                            name='recurrenceTime'\r\n                                            value={recurrenceTime}\r\n                                        />\r\n                                </div>}\r\n                            </div>\r\n\r\n                            <button\r\n                                className=\"submit-button\"\r\n                            >\r\n                                Confirm\r\n                            </button>\r\n                        </form>\r\n                    </div>\r\n                    {/* <div className = \"EmailShare\">\r\n                        {share_join_url!=''&&\r\n                        <EmailShare\r\n                            onCancel = {this.onCancel}\r\n                            sendEmail = {this.sendEmail}\r\n                            from_name={this.state.username}\r\n                            join_url={share_join_url}\r\n                            start_time={share_start_time}\r\n                            end_time={share_end_time}\r\n                            date={share_date}\r\n                            purpose={share_purpose}\r\n\r\n                            style={{height: '100%'}}\r\n                        />}\r\n                    </div> */}\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ZoomPicker;","import React, { Component } from 'react';\n\n//  FOR FUTURE USE\n\nclass RoomPicker extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            password: '',\n        }\n    };\n\n    render() {\n        return (\n            <div className=\"container\">\n                THIS IS ROOMPICKER\n            </div>\n        )};\n    }\nexport default RoomPicker","import React, { Component } from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport Navbar from './components/Navbar'\r\nimport { addDays , format } from 'date-fns';\r\n\r\nimport LogIn from './pages/LogIn'\r\nimport LandingPage from './pages/LandingPage'\r\nimport ZoomPicker from './pages/ZoomPicker'\r\nimport RoomPicker from './pages/RoomPicker'\r\nimport UserStore from './stores/UserStore'\r\nimport FrontEndTest from './pages/frontendtest'\r\nclass App extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            username: '',\r\n            today: format(new Date(), 'yyyy-MM-dd'),\r\n            currentPage: '0',\r\n            navItems: [\r\n            \r\n            {\r\n                page: '0',\r\n                name: 'Zoom'\r\n            },\r\n            {\r\n                page: '1',\r\n                name: 'Email'\r\n            },\r\n            //FOR FUTURE USE\r\n            // {\r\n            //     page: '2',\r\n            //     name: 'Room'\r\n            // }\r\n            ]\r\n        } \r\n        this.changePage = this.changePage.bind(this)\r\n        this.testLogIn = this.testLogIn.bind(this)\r\n    };\r\n\r\n\r\n    //  When application loads, check for log-in status.\r\n    //  If not logged in, return log-in page.\r\n    //  If logged in, render Zoom application.\r\n    async componentDidMount() {\r\n        try{\r\n            let res = await fetch ('/isLoggedIn', {\r\n                method: 'post',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application.json'\r\n                }\r\n            });\r\n\r\n            let result = await res.json();\r\n\r\n            if (result && result.success) {\r\n                UserStore.loading = false;\r\n                UserStore.isLoggedIn = true;\r\n                const username = UserStore.username\r\n                this.setState({username});\r\n            }\r\n\r\n            else {\r\n                UserStore.loading = false;\r\n                UserStore.isLoggedIn = false;\r\n            }\r\n        }\r\n\r\n        catch(e) {\r\n            UserStore.loading = false;\r\n            UserStore.isLoggedIn = false;\r\n        }\r\n    };\r\n\r\n\r\n    //  Change appliaton by clicking on Navbar. (Currently in development)\r\n    changePage(page){\r\n        const currentPage = page\r\n        this.setState({currentPage})\r\n    }\r\n    //FOR TEST PURPOSES ONLY\r\n    testLogIn(){\r\n        UserStore.isLoggedIn = true\r\n        UserStore.username = 'kacp'\r\n    }\r\n\r\n    render() {\r\n        const {today, navItems, currentPage} = this.state;\r\n        if (UserStore.isLoggedIn) {\r\n            return (\r\n                <div className=\"application\">\r\n                    <Navbar \r\n                        today={today}\r\n                        navItems={navItems}\r\n                        onPage={this.changePage}\r\n                    />\r\n                        {/* <FrontEndTest/> */}\r\n                        {currentPage==0&&\r\n                        <ZoomPicker/>\r\n                        }\r\n                        {currentPage==1&&\r\n                        <LandingPage/>\r\n                        }\r\n                        {currentPage==2&&\r\n                        <RoomPicker/>\r\n                        }\r\n                </div>\r\n                )}\r\n        else {\r\n            return (\r\n                <div className=\"log-in-page\">\r\n                    <LogIn />\r\n                </div>\r\n        )};\r\n    }\r\n}\r\nexport default observer(App);","import React, { Component } from 'react';\r\nimport TimeChecker from '../components/TimeChecker'\r\nimport SelectMenu from '../components/SelectMenu'\r\nimport InputField from '../components/InputField'\r\nimport SubmitButton from '../components/SubmitButton'\r\nimport AppointmentList from '../components/AppointmentList'\r\nimport EmailShare from '../components/EmailShare'\r\nimport DatePicker from 'react-datepicker';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport emailjs from 'emailjs-com';\r\nimport { addDays , format } from 'date-fns';\r\nimport UserStore from '../stores/UserStore'\r\nimport '../styles/ZoomPicker.css';\r\nimport { Paper } from '@material-ui/core';\r\n\r\nclass FrontEndTest extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            today: format(new Date(), 'yyyy-MM-dd'),\r\n            username: '',\r\n            date: '',\r\n            startTime: '',\r\n            endTime: '',\r\n            purpose: '',\r\n            buttonDisabled: false,\r\n            appointments: [{date:\r\n                \"2021-01-29\",\r\n                endTime:\"00:30:00\",\r\n                join_url:\"https://zoom.us/j/92192687861\",\r\n                meeting_id:\"92192687861\",\r\n                purpose:\"TEST\",\r\n                startTime:\"00:00:00\",\r\n                start_url:\"https://zoom.us/s/92192687861?zak=eyJ6bV9za20iOiJ6bV9vMm0iLCJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJjbGllbnQiLCJ1aWQiOiJhRk1QWnpNWVJsU25zclNDeGZOMW93IiwiaXNzIjoid2ViIiwic3R5IjoxLCJ3Y2QiOiJhdzEiLCJjbHQiOjAsInN0ayI6IkVYZkpTWTdxOFQyQ3ZoMHVIdXB6OUVEVjIzenNYd2xSUkx2ZkFrUzJnc28uQUcuNXNTeGd3OHpoR3BNY0JOLUNrVTJmcnZKMEN3dTIyaE5FeWpva2F6bms3eDlBTDJKQmo2VklabDJRZERIdHZ6aUx2cjlpeklVVEowSkdqNC5Qa1gxeDZtWl80N3o3QmdDbDFpS2F3LnRKQlBQbVhkSEtuZUFPdnEiLCJleHAiOjE2MTE3MzI4MDMsImlhdCI6MTYxMTcyNTYwMywiYWlkIjoiY...\",\r\n                zoom_username:\"zoom10@kacp.org\"\r\n                },\r\n            {date:\r\n                \"2021-01-29\",\r\n                endTime:\"00:30:00\",\r\n                join_url:\"https://zoom.us/j/92192687861\",\r\n                meeting_id:\"92192687861\",\r\n                purpose:\"TEST\",\r\n                startTime:\"00:00:00\",\r\n                start_url:\"https://zoom.us/s/92192687861?zak=eyJ6bV9za20iOiJ6bV9vMm0iLCJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJjbGllbnQiLCJ1aWQiOiJhRk1QWnpNWVJsU25zclNDeGZOMW93IiwiaXNzIjoid2ViIiwic3R5IjoxLCJ3Y2QiOiJhdzEiLCJjbHQiOjAsInN0ayI6IkVYZkpTWTdxOFQyQ3ZoMHVIdXB6OUVEVjIzenNYd2xSUkx2ZkFrUzJnc28uQUcuNXNTeGd3OHpoR3BNY0JOLUNrVTJmcnZKMEN3dTIyaE5FeWpva2F6bms3eDlBTDJKQmo2VklabDJRZERIdHZ6aUx2cjlpeklVVEowSkdqNC5Qa1gxeDZtWl80N3o3QmdDbDFpS2F3LnRKQlBQbVhkSEtuZUFPdnEiLCJleHAiOjE2MTE3MzI4MDMsImlhdCI6MTYxMTcyNTYwMywiYWlkIjoiY...\",\r\n                zoom_username:\"zoom10@kacp.org\"\r\n                },{date:\r\n                    \"2021-01-29\",\r\n                    endTime:\"00:30:00\",\r\n                    join_url:\"https://zoom.us/j/92192687861\",\r\n                    meeting_id:\"92192687861\",\r\n                    purpose:\"TEST\",\r\n                    startTime:\"00:00:00\",\r\n                    start_url:\"https://zoom.us/s/92192687861?zak=eyJ6bV9za20iOiJ6bV9vMm0iLCJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJjbGllbnQiLCJ1aWQiOiJhRk1QWnpNWVJsU25zclNDeGZOMW93IiwiaXNzIjoid2ViIiwic3R5IjoxLCJ3Y2QiOiJhdzEiLCJjbHQiOjAsInN0ayI6IkVYZkpTWTdxOFQyQ3ZoMHVIdXB6OUVEVjIzenNYd2xSUkx2ZkFrUzJnc28uQUcuNXNTeGd3OHpoR3BNY0JOLUNrVTJmcnZKMEN3dTIyaE5FeWpva2F6bms3eDlBTDJKQmo2VklabDJRZERIdHZ6aUx2cjlpeklVVEowSkdqNC5Qa1gxeDZtWl80N3o3QmdDbDFpS2F3LnRKQlBQbVhkSEtuZUFPdnEiLCJleHAiOjE2MTE3MzI4MDMsImlhdCI6MTYxMTcyNTYwMywiYWlkIjoiY...\",\r\n                    zoom_username:\"zoom10@kacp.org\"\r\n                    },\r\n                    {date:\r\n                        \"2021-01-29\",\r\n                        endTime:\"00:30:00\",\r\n                        join_url:\"https://zoom.us/j/92192687861\",\r\n                        meeting_id:\"92192687861\",\r\n                        purpose:\"TEST\",\r\n                        startTime:\"00:00:00\",\r\n                        start_url:\"https://zoom.us/s/92192687861?zak=eyJ6bV9za20iOiJ6bV9vMm0iLCJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJjbGllbnQiLCJ1aWQiOiJhRk1QWnpNWVJsU25zclNDeGZOMW93IiwiaXNzIjoid2ViIiwic3R5IjoxLCJ3Y2QiOiJhdzEiLCJjbHQiOjAsInN0ayI6IkVYZkpTWTdxOFQyQ3ZoMHVIdXB6OUVEVjIzenNYd2xSUkx2ZkFrUzJnc28uQUcuNXNTeGd3OHpoR3BNY0JOLUNrVTJmcnZKMEN3dTIyaE5FeWpva2F6bms3eDlBTDJKQmo2VklabDJRZERIdHZ6aUx2cjlpeklVVEowSkdqNC5Qa1gxeDZtWl80N3o3QmdDbDFpS2F3LnRKQlBQbVhkSEtuZUFPdnEiLCJleHAiOjE2MTE3MzI4MDMsImlhdCI6MTYxMTcyNTYwMywiYWlkIjoiY...\",\r\n                        zoom_username:\"zoom10@kacp.org\"\r\n                        },\r\n                        {date:\r\n                            \"2021-01-29\",\r\n                            endTime:\"00:30:00\",\r\n                            join_url:\"https://zoom.us/j/92192687861\",\r\n                            meeting_id:\"92192687861\",\r\n                            purpose:\"TEST\",\r\n                            startTime:\"00:00:00\",\r\n                            start_url:\"https://zoom.us/s/92192687861?zak=eyJ6bV9za20iOiJ6bV9vMm0iLCJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJjbGllbnQiLCJ1aWQiOiJhRk1QWnpNWVJsU25zclNDeGZOMW93IiwiaXNzIjoid2ViIiwic3R5IjoxLCJ3Y2QiOiJhdzEiLCJjbHQiOjAsInN0ayI6IkVYZkpTWTdxOFQyQ3ZoMHVIdXB6OUVEVjIzenNYd2xSUkx2ZkFrUzJnc28uQUcuNXNTeGd3OHpoR3BNY0JOLUNrVTJmcnZKMEN3dTIyaE5FeWpva2F6bms3eDlBTDJKQmo2VklabDJRZERIdHZ6aUx2cjlpeklVVEowSkdqNC5Qa1gxeDZtWl80N3o3QmdDbDFpS2F3LnRKQlBQbVhkSEtuZUFPdnEiLCJleHAiOjE2MTE3MzI4MDMsImlhdCI6MTYxMTcyNTYwMywiYWlkIjoiY...\",\r\n                            zoom_username:\"zoom10@kacp.org\"\r\n                            },\r\n                            {date:\r\n                                \"2021-01-29\",\r\n                                endTime:\"00:30:00\",\r\n                                join_url:\"https://zoom.us/j/92192687861\",\r\n                                meeting_id:\"92192687861\",\r\n                                purpose:\"TEST\",\r\n                                startTime:\"00:00:00\",\r\n                                start_url:\"https://zoom.us/s/92192687861?zak=eyJ6bV9za20iOiJ6bV9vMm0iLCJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJjbGllbnQiLCJ1aWQiOiJhRk1QWnpNWVJsU25zclNDeGZOMW93IiwiaXNzIjoid2ViIiwic3R5IjoxLCJ3Y2QiOiJhdzEiLCJjbHQiOjAsInN0ayI6IkVYZkpTWTdxOFQyQ3ZoMHVIdXB6OUVEVjIzenNYd2xSUkx2ZkFrUzJnc28uQUcuNXNTeGd3OHpoR3BNY0JOLUNrVTJmcnZKMEN3dTIyaE5FeWpva2F6bms3eDlBTDJKQmo2VklabDJRZERIdHZ6aUx2cjlpeklVVEowSkdqNC5Qa1gxeDZtWl80N3o3QmdDbDFpS2F3LnRKQlBQbVhkSEtuZUFPdnEiLCJleHAiOjE2MTE3MzI4MDMsImlhdCI6MTYxMTcyNTYwMywiYWlkIjoiY...\",\r\n                                zoom_username:\"zoom10@kacp.org\"\r\n                                },\r\n                                {date:\r\n                                    \"2021-01-29\",\r\n                                    endTime:\"00:30:00\",\r\n                                    join_url:\"https://zoom.us/j/92192687861\",\r\n                                    meeting_id:\"92192687861\",\r\n                                    purpose:\"TEST\",\r\n                                    startTime:\"00:00:00\",\r\n                                    start_url:\"https://zoom.us/s/92192687861?zak=eyJ6bV9za20iOiJ6bV9vMm0iLCJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJjbGllbnQiLCJ1aWQiOiJhRk1QWnpNWVJsU25zclNDeGZOMW93IiwiaXNzIjoid2ViIiwic3R5IjoxLCJ3Y2QiOiJhdzEiLCJjbHQiOjAsInN0ayI6IkVYZkpTWTdxOFQyQ3ZoMHVIdXB6OUVEVjIzenNYd2xSUkx2ZkFrUzJnc28uQUcuNXNTeGd3OHpoR3BNY0JOLUNrVTJmcnZKMEN3dTIyaE5FeWpva2F6bms3eDlBTDJKQmo2VklabDJRZERIdHZ6aUx2cjlpeklVVEowSkdqNC5Qa1gxeDZtWl80N3o3QmdDbDFpS2F3LnRKQlBQbVhkSEtuZUFPdnEiLCJleHAiOjE2MTE3MzI4MDMsImlhdCI6MTYxMTcyNTYwMywiYWlkIjoiY...\",\r\n                                    zoom_username:\"zoom10@kacp.org\"\r\n                                    },\r\n                                    {date:\r\n                                        \"2021-01-29\",\r\n                                        endTime:\"00:30:00\",\r\n                                        join_url:\"https://zoom.us/j/92192687861\",\r\n                                        meeting_id:\"92192687861\",\r\n                                        purpose:\"TEST\",\r\n                                        startTime:\"00:00:00\",\r\n                                        start_url:\"https://zoom.us/s/92192687861?zak=eyJ6bV9za20iOiJ6bV9vMm0iLCJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJjbGllbnQiLCJ1aWQiOiJhRk1QWnpNWVJsU25zclNDeGZOMW93IiwiaXNzIjoid2ViIiwic3R5IjoxLCJ3Y2QiOiJhdzEiLCJjbHQiOjAsInN0ayI6IkVYZkpTWTdxOFQyQ3ZoMHVIdXB6OUVEVjIzenNYd2xSUkx2ZkFrUzJnc28uQUcuNXNTeGd3OHpoR3BNY0JOLUNrVTJmcnZKMEN3dTIyaE5FeWpva2F6bms3eDlBTDJKQmo2VklabDJRZERIdHZ6aUx2cjlpeklVVEowSkdqNC5Qa1gxeDZtWl80N3o3QmdDbDFpS2F3LnRKQlBQbVhkSEtuZUFPdnEiLCJleHAiOjE2MTE3MzI4MDMsImlhdCI6MTYxMTcyNTYwMywiYWlkIjoiY...\",\r\n                                        zoom_username:\"zoom10@kacp.org\"\r\n                                        },\r\n                                        {date:\r\n                                            \"2021-01-29\",\r\n                                            endTime:\"00:30:00\",\r\n                                            join_url:\"https://zoom.us/j/92192687861\",\r\n                                            meeting_id:\"92192687861\",\r\n                                            purpose:\"TEST\",\r\n                                            startTime:\"00:00:00\",\r\n                                            start_url:\"https://zoom.us/s/92192687861?zak=eyJ6bV9za20iOiJ6bV9vMm0iLCJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJjbGllbnQiLCJ1aWQiOiJhRk1QWnpNWVJsU25zclNDeGZOMW93IiwiaXNzIjoid2ViIiwic3R5IjoxLCJ3Y2QiOiJhdzEiLCJjbHQiOjAsInN0ayI6IkVYZkpTWTdxOFQyQ3ZoMHVIdXB6OUVEVjIzenNYd2xSUkx2ZkFrUzJnc28uQUcuNXNTeGd3OHpoR3BNY0JOLUNrVTJmcnZKMEN3dTIyaE5FeWpva2F6bms3eDlBTDJKQmo2VklabDJRZERIdHZ6aUx2cjlpeklVVEowSkdqNC5Qa1gxeDZtWl80N3o3QmdDbDFpS2F3LnRKQlBQbVhkSEtuZUFPdnEiLCJleHAiOjE2MTE3MzI4MDMsImlhdCI6MTYxMTcyNTYwMywiYWlkIjoiY...\",\r\n                                            zoom_username:\"zoom10@kacp.org\"\r\n                                            },\r\n                                            {date:\r\n                                                \"2021-01-29\",\r\n                                                endTime:\"00:30:00\",\r\n                                                join_url:\"https://zoom.us/j/92192687861\",\r\n                                                meeting_id:\"92192687861\",\r\n                                                purpose:\"TEST\",\r\n                                                startTime:\"00:00:00\",\r\n                                                start_url:\"https://zoom.us/s/92192687861?zak=eyJ6bV9za20iOiJ6bV9vMm0iLCJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJjbGllbnQiLCJ1aWQiOiJhRk1QWnpNWVJsU25zclNDeGZOMW93IiwiaXNzIjoid2ViIiwic3R5IjoxLCJ3Y2QiOiJhdzEiLCJjbHQiOjAsInN0ayI6IkVYZkpTWTdxOFQyQ3ZoMHVIdXB6OUVEVjIzenNYd2xSUkx2ZkFrUzJnc28uQUcuNXNTeGd3OHpoR3BNY0JOLUNrVTJmcnZKMEN3dTIyaE5FeWpva2F6bms3eDlBTDJKQmo2VklabDJRZERIdHZ6aUx2cjlpeklVVEowSkdqNC5Qa1gxeDZtWl80N3o3QmdDbDFpS2F3LnRKQlBQbVhkSEtuZUFPdnEiLCJleHAiOjE2MTE3MzI4MDMsImlhdCI6MTYxMTcyNTYwMywiYWlkIjoiY...\",\r\n                                                zoom_username:\"zoom10@kacp.org\"\r\n                                                },\r\n                                        ],\r\n            reucurringMeetings: [],\r\n            //Select menus for recurring meetings\r\n            recurrence: false,\r\n            recurrenceOptions: [\r\n                {name: 'One-time', value: '2'},\r\n                {name: 'Repeating', value: '8'}\r\n            ],\r\n            recurrenceOption: '8',\r\n            recurrenceTypes: [\r\n                {name: 'Weekly', value: '2',},\r\n                {name: 'Monthly', value: '3',}\r\n            ],\r\n            recurrenceType: 2,\r\n            recurrenceWeeks: [\r\n                {name: 'First', value: '1'},\r\n                {name: 'Second', value: '2'},\r\n                {name: 'Third', value: '3'},\r\n                {name: 'Fourth', value: '4'},\r\n                {name: 'Last', value: '-1'},\r\n            ],\r\n            recurrenceWeek: 1,\r\n            recurrenceDays: [\r\n                {name: 'Sunday', value: '7',},\r\n                {name: 'Monday', value: '1',},\r\n                {name: 'Tuesday',value: '2',},\r\n                {name: 'Wednesday', value: '3',},\r\n                {name: 'Thursday', value: '4',},\r\n                {name: 'Friday', value: '5',},\r\n                {name: 'Saturday', value: '6',},\r\n            ],\r\n            recurrenceDay: 1,\r\n            recurrenceIntervals: [\r\n                {name: '1', value: '1',},\r\n                {name: '2', value: '2',},\r\n                {name: '3', value: '3',},\r\n            ],\r\n            recurrenceInterval: 1,\r\n            recurrenceTimes: [\r\n                {name: '1', value: '1',},\r\n                {name: '2', value: '2',},\r\n                {name: '3', value: '3',},\r\n                {name: '4', value: '4',},\r\n                {name: '5', value: '5',},\r\n                {name: '6', value: '6',},\r\n                {name: '7', value: '7',},\r\n                {name: '8', value: '8',},\r\n                {name: '9', value: '9',},\r\n                {name: '10', value: '10',},\r\n                {name: '11', value: '11',},\r\n                {name: '12', value: '12',},\r\n                {name: '13', value: '13',},\r\n                {name: '14', value: '14',},\r\n                {name: '15', value: '15',},\r\n                {name: '16', value: '16',}\r\n            ],\r\n            recurrenceTime: 2,\r\n\r\n            //state for email sharing\r\n            share_join_url: '',\r\n            share_start_time: '',\r\n            share_end_time: '',\r\n            share_date: '',\r\n            share_purpose: '', \r\n        }\r\n\r\n    };\r\n\r\n\r\n\r\n    //RENDER METHOD\r\n    render() {\r\n        const { today, date, startTime, endTime, purpose, recurrenceTypes, recurrenceType, \r\n                recurrenceOptions, recurrenceOption, recurrenceWeeks, recurrenceWeek,  recurrenceDays, recurrenceDay, recurrenceIntervals, recurrenceInterval,\r\n                recurrenceTimes, recurrenceTime, share_join_url, share_start_time, share_end_time,\r\n                share_date, share_purpose} = this.state;\r\n        return (\r\n            <div>\r\n                <div className = \"app_container\">\r\n                    <div className = \"left_container\" >\r\n                        <div className = \"appointment_display\">\r\n                            <div className=\"explanation\">\r\n                                <div className = \"block_title\">Appointments</div> <div className = \"block_date\">{today}</div>\r\n                            </div>\r\n\r\n                            <div className = \"appointment_list_container\">\r\n                                    <AppointmentList\r\n                                        appointmentCards = {this.state.appointments}\r\n                                    />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"right_container\">\r\n                        <text className = 'right-title'>Create Appointment</text>\r\n                        <form className=\"appointment_form\"\r\n                        onSubmit={this.handleSubmit}>\r\n\r\n                            \r\n                            {/* <DateChecker/> */}\r\n                            <div className = \"time-picker\">\r\n                                <label>Starting Date</label>\r\n                                <DatePicker\r\n                                    className=\"start-date-picker\"\r\n                                    name=\"date\"\r\n                                    selected={date}\r\n                                    onChange={(date) => this.handleDateChange(date, \"date\")}\r\n                                    onSelect={this.handleClick}\r\n                                    placeholderText=\"Starting Date\"\r\n                                    dateFormat=\"yyyy-MM-dd\"\r\n                                    minDate= {new Date()}\r\n                                    maxDate={addDays(new Date(), 8)}\r\n                                    autoComplete=\"off\"\r\n                                />\r\n\r\n                                <label>Starting Time</label>\r\n                                <DatePicker\r\n                                    label='Start Time'\r\n                                    className=\"start-time-picker\"\r\n                                    name=\"startTime\"\r\n                                    selected={startTime}\r\n                                    onChange={(startTime) => this.handleDateChange(startTime, \"startTime\")}\r\n                                    onSelect={this.handleClick}\r\n                                    placeholderText=\"Starting Time\"\r\n                                    showTimeSelect\r\n                                    showTimeSelectOnly\r\n                                    timeFormat=\"HH:mm\"\r\n                                    timeIntervals={30}\r\n                                    dateFormat=\"h:mm aa\"\r\n                                    autoComplete=\"off\"\r\n                                />\r\n\r\n                                <label>Ending Time</label>\r\n                                <DatePicker\r\n                                    className=\"end-time-picker\"\r\n                                    name=\"endTime\"\r\n                                    selected={endTime}\r\n                                    onChange={(endTime) => this.handleDateChange(endTime, \"endTime\")}\r\n                                    onSelect={this.handleClick}\r\n                                    placeholderText=\"Ending Time\"\r\n                                    showTimeSelect\r\n                                    showTimeSelectOnly\r\n                                    timeFormat=\"HH:mm\"\r\n                                    timeIntervals={30}\r\n                                    dateFormat=\"h:mm aa\"\r\n                                    autoComplete=\"off\"\r\n                                />\r\n                                <label>Purpose</label>\r\n                                <input\r\n                                    label=\"Purpose\"\r\n                                    className=\"purpose-picker\"\r\n                                    type=\"text\"\r\n                                    name=\"purpose\"\r\n                                    placeholder=\"Purpose\"\r\n                                    value = {purpose}\r\n                                    onChange={this.handleChange}\r\n                                    autoComplete=\"off\"\r\n                                />\r\n                            </div>\r\n                            <div className='recurrence-options'>\r\n                                <li className='tab-container' value={recurrenceOption} onChange={this.handleChange}>\r\n                                    <ul>\r\n                                        <input name=\"recurrenceOption\" type=\"radio\" id=\"tab01\" value='2'/>\r\n                                        <label for=\"tab01\">One-time</label>\r\n                                    </ul>\r\n                                    <ul>\r\n                                        <input name=\"recurrenceOption\" type=\"radio\" id=\"tab02\" value='8'/>\r\n                                        <label for=\"tab02\">Repeating</label>\r\n                                    </ul>\r\n                                </li>\r\n                                    {(recurrenceOption==8) && \r\n                                    <div className='recurrence-menu'>\r\n                                        <SelectMenu\r\n                                            label=\"반복 / Recurrence\"\r\n                                            options={recurrenceTypes}\r\n                                            onChange={this.handleChange}\r\n                                            name='recurrenceType'\r\n                                            value={recurrenceType}\r\n                                        />\r\n\r\n\r\n                                        <SelectMenu\r\n                                            label={(recurrenceType==2)?'간격 (주) / Interval (Weeks)':'간격 (달) / Interval (Months)'}\r\n                                            options={recurrenceIntervals}\r\n                                            onChange={this.handleChange}\r\n                                            name='recurrenceInterval'\r\n                                            value={recurrenceInterval}\r\n                                        />\r\n                                        {(recurrenceType==3) && <SelectMenu\r\n                                            label='매 달 몇째주 / Week of the month'\r\n                                            endLabel='week'\r\n                                            options={recurrenceWeeks}\r\n                                            onChange={this.handleChange}\r\n                                            name='recurrenceWeek'\r\n                                            value={recurrenceWeek}\r\n                                        />}\r\n\r\n                                        <SelectMenu\r\n                                            label='요일 / Day of the Week'\r\n                                            options={recurrenceDays}\r\n                                            onChange={this.handleChange}\r\n                                            name='recurrenceDay'\r\n                                            value={recurrenceDay}\r\n                                        />\r\n\r\n                                        <SelectMenu\r\n                                            label='모임 횟수 / Recurrence amount'\r\n                                            options={recurrenceTimes}\r\n                                            onChange={this.handleChange}\r\n                                            name='recurrenceTime'\r\n                                            value={recurrenceTime}\r\n                                        />\r\n                                </div>}\r\n                            </div>\r\n                            <button\r\n                                className=\"submit-button\"\r\n                            >\r\n                                Confirm\r\n                            </button>\r\n                        </form>\r\n                    </div>\r\n                    {/* <div className = \"EmailShare\">\r\n                        {share_join_url!=''&&\r\n                        <EmailShare\r\n                            onCancel = {this.onCancel}\r\n                            sendEmail = {this.sendEmail}\r\n                            from_name={this.state.username}\r\n                            join_url={share_join_url}\r\n                            start_time={share_start_time}\r\n                            end_time={share_end_time}\r\n                            date={share_date}\r\n                            purpose={share_purpose}\r\n\r\n                            style={{height: '100%'}}\r\n                        />}\r\n                    </div> */}\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FrontEndTest;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <div>\n    <App />\n  </div>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/log-in-image.4d946127.png\";"],"sourceRoot":""}