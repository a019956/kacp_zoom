{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MinLe\\\\Source\\\\Repos\\\\kacp_zoom\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { addDays } from 'date-fns';\nimport Navbar from './components/Navbar';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDateChange = date => this.setState({\n      date\n    });\n\n    this.handleTimeChange = time => this.setState({\n      time\n    });\n\n    this.handleClick = () => alert('selected', this.state.date);\n\n    this.state = {\n      date: new Date()\n    };\n    this.handleConfirm = this.handleConfirm.bind(this);\n    this.handleDateChange = this.handleDateChange.bind(this);\n  }\n\n  handleConfirm() {\n    alert(this.state.date.toLocaleDateString());\n    console.log(this.state.date);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(DatePicker, {\n      selected: this.state.date,\n      onChange: this.handleDateChange,\n      onSelect: this.state.handleClick,\n      dateFormat: \"MM/dd/yyyy h:mm\",\n      minDate: new Date(),\n      maxDate: addDays(new Date(), 7),\n      showTimeSelect: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleConfirm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }, \"Confirm\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/MinLe/Source/Repos/kacp_zoom/src/App.js"],"names":["React","Component","DatePicker","addDays","Navbar","App","constructor","props","handleDateChange","date","setState","handleTimeChange","time","handleClick","alert","state","Date","handleConfirm","bind","toLocaleDateString","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAO,4CAAP;AACA,SAASC,OAAT,QAAwB,UAAxB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AACxBK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAanBC,gBAbmB,GAaAC,IAAI,IAAI,KAAKC,QAAL,CAAc;AAAED,MAAAA;AAAF,KAAd,CAbR;;AAAA,SAcnBE,gBAdmB,GAcAC,IAAI,IAAI,KAAKF,QAAL,CAAc;AAAEE,MAAAA;AAAF,KAAd,CAdR;;AAAA,SAenBC,WAfmB,GAeL,MAAMC,KAAK,CAAC,UAAD,EAAa,KAAKC,KAAL,CAAWN,IAAxB,CAfN;;AAEf,SAAKM,KAAL,GAAa;AACTN,MAAAA,IAAI,EAAE,IAAIO,IAAJ;AADG,KAAb;AAGA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKV,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBU,IAAtB,CAA2B,IAA3B,CAAxB;AACH;;AACDD,EAAAA,aAAa,GAAG;AAEZH,IAAAA,KAAK,CAAE,KAAKC,KAAL,CAAWN,IAAZ,CAAkBU,kBAAlB,EAAD,CAAL;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAL,CAAWN,IAAvB;AACH;;AAIDa,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,UAAD;AACI,MAAA,QAAQ,EAAE,KAAKP,KAAL,CAAWN,IADzB;AAEI,MAAA,QAAQ,EAAE,KAAKD,gBAFnB;AAGI,MAAA,QAAQ,EAAE,KAAKO,KAAL,CAAWF,WAHzB;AAII,MAAA,UAAU,EAAC,iBAJf;AAKI,MAAA,OAAO,EAAE,IAAIG,IAAJ,EALb;AAMI,MAAA,OAAO,EAAEb,OAAO,CAAC,IAAIa,IAAJ,EAAD,EAAa,CAAb,CANpB;AAOI,MAAA,cAAc,MAPlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAWI;AACI,MAAA,OAAO,EAAE,KAAKC,aADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAXJ,CADJ;AAkBH;;AApCuB;;AAsC5B,eAAeZ,GAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { addDays } from 'date-fns';\r\nimport Navbar from './components/Navbar'\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            date: new Date(),\r\n        }\r\n        this.handleConfirm = this.handleConfirm.bind(this);\r\n        this.handleDateChange = this.handleDateChange.bind(this);\r\n    };\r\n    handleConfirm() {\r\n\r\n        alert((this.state.date).toLocaleDateString());\r\n        console.log(this.state.date)\r\n    }\r\n    handleDateChange = date => this.setState({ date });\r\n    handleTimeChange = time => this.setState({ time });\r\n    handleClick = () => alert('selected', this.state.date);\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <Navbar />\r\n                <DatePicker\r\n                    selected={this.state.date}\r\n                    onChange={this.handleDateChange}\r\n                    onSelect={this.state.handleClick}\r\n                    dateFormat=\"MM/dd/yyyy h:mm\"\r\n                    minDate={new Date()}\r\n                    maxDate={addDays(new Date(), 7)}\r\n                    showTimeSelect\r\n                />\r\n                <button\r\n                    onClick={this.handleConfirm}>\r\n                    Confirm\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default App;"]},"metadata":{},"sourceType":"module"}